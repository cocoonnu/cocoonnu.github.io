[{"title":"Hexo 个人博客搭建","path":"/2025/04/29/hexo-learn/","content":"Hexo 个人博客搭建 官网：https://hexo.io/zh-cn/docs/，下面手把手讲一讲初始化搭建过程 Stellar Hexo GitHub 搭建过程使用 NodeV18 全局安装 Hexo 1$ npm install -g hexo-cli 进入文档文件夹初始化一个项目 123$ hexo init &lt;folder&gt;$ cd &lt;folder&gt;$ npm install 使用 Hexo 命令来本地预览 123$ hexo server$ hexo clean$ hexo generate Hexo 项目配置热更新 安装 hexo-browsersync，之后运行 hexo server 时会自动进行热更新 1$ npm install hexo-browsersync --save 在 _config.yml 文件中可自定义 browsersync 的配置：browsersync-options 12browsersync: notify: false # 关闭浏览器更新提示 部署过程通过 cocoonnu.github.io 一键部署 在 Github 中新建一个名为 cocoonnu.github.io 的项目，确保项目的 Settings -&gt; Pages 配置中选择的是 Deploy from a branch 在 Hexo 项目的根目录中对 _config.yml 文件添加以下内容，分支名和 Deploy from a branch 选择的一致为 main 1234deploy: type: git repo: git@github.com:cocoonnu/cocoonnu.github.io.git branch: main 下载自动部署工具 1$ npm install hexo-deployer-git --save 最后使用命令进行一键部署即可，在 Github 项目中 Settings -&gt; Actions 查看部署结果 1$ hexo deploy 在这里预览页面：https://cocoonnu.github.io/ 通过 GitHub Pages 一键部署 在 Github 中新建一个同名的项目并同步 git，确保项目的 Settings -&gt; Pages 配置中选择的是 GitHub Actions 在 Hexo 项目的根目录中新建 .github&#x2F;workflows&#x2F;pages.yml，填入：https://hexo.io/zh-cn/docs/github-pages 最后直接提交代码即可同步一键部署，在 Github 项目中 Settings -&gt; Actions 查看部署结果 在这里预览页面：https://cocoonnu.github.io/hexo-blog-cocoon/ 这是&nbsp;Stellar&nbsp;主题中备注块标签的使用color 可设置 red、orange、amber、yellow、green、cyan、blue、purple、light、dark、warning、error 几种取值。 主题配置Stellar 主题配置 进入 Stellar 官网，可以看到 Stellar 主题的详细配置，这里只介绍几个常用的配置 通过本地运行 stellar-examples 示例项目来引入官网使用的样式 全局配置项主要在 _config.yml 和 _config.stellar.yml 两个文件中进行配置 博客内容主要使用 Markdown 顶部配置和语法、Stellar 内置的标签组件进行编写和排版 https://xaoxuu.com/wiki/stellar/tag-plugins/https://xaoxuu.com/wiki/stellar/tag-plugins/","tags":["Hexo"],"categories":["技术文档"]},{"title":"关于","path":"/about/index.html","content":"友链关于cocoondesigned by cocoon 关于本站 本站没有任何推广和打赏链接，如果您觉得哪个作品不错，欢迎去对应的仓库点个赞，或者在对应的文章下面留言互动一下。 开源项目无任何盈利目的，只在工作闲暇时间进行维护，有相关需求请前往对应项目提 Issue 进行反馈，通过私人邮件询问开源项目问题可能得不到答复。"}]